on: [push, pull_request]

name: Build and Test

jobs:
  sccache:
    runs-on: ubuntu-latest
    if: ${{ inputs.sccache }}
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: "1G"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: taiki-e/install-action@cargo-binstall
      - run: cargo binstall --no-confirm --no-symlinks sccache
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cache/          
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
      - uses: chetan/git-restore-mtime-action@v1
        if: ${{ inputs.restore_mtime }}
      - run: cargo test --locked --no-run
      - run: cargo test --locked --no-fail-fast
      - run: cargo clippy --locked --workspace --tests --no-deps -- -D warnings



  # check:
  #   name: Check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2

  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true

  #     - name: Run cargo check
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: check

  # test:
  #   name: Test Suite
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2

  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true

  #     - name: Run cargo test
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: test

  # lints:
  #   name: Lints
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2

  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #         components: rustfmt, clippy

  #     - name: Run cargo fmt
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --all -- --check

  #     - name: Run cargo clippy
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: -- -D warnings
